/*!
 * @author Jan Nejedly support@3b-fly.eu
 * @copyright Jan Nejedly
 * @version 2.0.0
 * @license see license in 'LICENSE' file
*/

var bbbfly=bbbfly||{};bbbfly.map=bbbfly.map||{};bbbfly.map.control=bbbfly.map.control||{};bbbfly.map.control.layers={control_type:"layers"};bbbfly.map.control.layers._onLinkedToMap=function(a){a&&!this.IsApplying()&&this.FillList()};bbbfly.map.control.layers._createListener=function(){return{Listen:["OnLayersChanged"],OnLayersChanged:bbbfly.map.control.layers._onLayersChanged}};bbbfly.map.control.layers._onLayersChanged=function(){this.Owner.IsApplying()||this.Owner.FillList()};
bbbfly.map.control.layers._getLayers=function(){var a=this.GetMap();return a?a.GetLayers():{}};bbbfly.map.control.layers._fillList=function(){var a=this.Controls.List;if(a){this._Filling=!0;var b=[],e=this.GetLayers(),c;for(c in e){var d=e[c];b.push({ID:d.Id,Text:d.Id,Data:d,Checked:!!d.Visible,Enabled:d.Display!==bbbfly.Map.Layer.display.fixed})}a.SetItems(b);this._Filling=!1;Function.isFunction(this.OnFilled)&&this.OnFilled()}};bbbfly.map.control.layers._isFilling=function(){return!!this._Filling};
bbbfly.map.control.layers._isApplying=function(){return!!this._Applying};bbbfly.map.control.layers._onGetListText=function(a,b){a=a.Owner.Owner.GetMap().GetLayerName(b.ID);return String.isString(a)?a:b.Text};bbbfly.map.control.layers._onItemCheckChanged=function(a,b){a.Owner.Owner.GetMap().SetLayerVisible(b.ID,!!b.Checked)};bbbfly.map.control.layers._refresh=function(){this.ParentControl.Owner.Owner.FillList()};bbbfly.map.control.layers._close=function(){this.ParentControl.Owner.Owner.SetVisible(!1)};
bbbfly.map.control.layers._applyLayers=function(){var a=this.Controls.List,b=this.GetMap();a&&b&&(this._Applying=!0,a.Scan(function(a,c){b.SetLayerVisible(c.ID,!!c.Checked);return!0}),this._Applying=!1,this.FillList())};
bbbfly.MapLayers=function(a,b,e){a=a||{};ng_MergeDef(a,{Data:{ControlType:bbbfly.map.control.layers.control_type,_Filling:!1,_Applying:!1},Controls:{TitlePanel:{Type:"bbbfly.Panel",ParentReferences:!1,Controls:{Refresh:{Type:"bbbfly.Button",Data:{AltRes:"bbbfly_map_control_layers_refresh"},Events:{OnClick:bbbfly.map.control.layers._refresh}},Title:{Type:"bbbfly.Text",Data:{TextRes:"bbbfly_map_control_layers_title"}},Close:{Type:"bbbfly.Button",Data:{AltRes:"bbbfly_map_control_layers_close"},Events:{OnClick:bbbfly.map.control.layers._close}}}},
List:{Type:"bbbfly.List",Events:{OnItemCheckChanged:bbbfly.map.control.layers._onItemCheckChanged},OverrideEvents:{OnGetText:bbbfly.map.control.layers._onGetListText}}},Events:{OnLinkedToMap:bbbfly.map.control.layers._onLinkedToMap,OnFilled:null},Methods:{CreateListener:bbbfly.map.control.layers._createListener,GetLayers:bbbfly.map.control.layers._getLayers,FillList:bbbfly.map.control.layers._fillList,IsFilling:bbbfly.map.control.layers._isFilling,IsApplying:bbbfly.map.control.layers._isApplying,
ApplyLayers:bbbfly.map.control.layers._applyLayers}});return ngCreateControlAsType(a,"bbbfly.MapControl",b,e)};ngUserControls=ngUserControls||[];ngUserControls.bbbfly_map_control_layers={OnInit:function(){ngRegisterControlType("bbbfly.MapLayers",bbbfly.MapLayers)}};
